$version Generated by VerilatedVcd $end
$timescale 1s $end

 $scope module TOP $end
  $var wire  1 # clk $end
  $var wire  1 $ in $end
  $var wire  1 & out $end
  $var wire  1 % reset $end
  $scope module top $end
   $var wire  4 ) S0 [3:0] $end
   $var wire  4 * S1 [3:0] $end
   $var wire  4 + S2 [3:0] $end
   $var wire  4 , S3 [3:0] $end
   $var wire  4 - S4 [3:0] $end
   $var wire  4 . S5 [3:0] $end
   $var wire  4 / S6 [3:0] $end
   $var wire  4 0 S7 [3:0] $end
   $var wire  4 1 S8 [3:0] $end
   $var wire  1 # clk $end
   $var wire  1 $ in $end
   $var wire  1 & out $end
   $var wire  1 % reset $end
   $var wire  4 ' state_din [3:0] $end
   $var wire  4 ( state_dout [3:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#1
0#
0$
0%
0&
b0000 '
b0000 (
b0000 )
b0001 *
b0010 +
b0011 ,
b0100 -
b0101 .
b0110 /
b0111 0
b1000 1
#2
1#
b0001 '
b0001 (
#3
0#
1$
#4
1#
b0101 '
b0101 (
#5
0#
#6
1#
b0110 '
b0110 (
#7
0#
0$
#8
1#
b0001 '
b0001 (
#9
0#
#10
1#
b0010 '
b0010 (
#11
0#
#12
1#
b0011 '
b0011 (
#13
0#
#14
1#
1&
b0100 '
b0100 (
#15
0#
1$
#16
1#
0&
b0101 '
b0101 (
#17
0#
#18
1#
b0110 '
b0110 (
#19
0#
#20
1#
b0111 '
b0111 (
#21
0#
#22
1#
1&
b1000 '
b1000 (
#23
0#
0$
#24
1#
0&
b0001 '
b0001 (
#25
0#
#26
1#
b0010 '
b0010 (
#27
0#
1%
#28
1#
b0000 '
b0011 (
#29
0#
0%
#30
1#
b0001 '
b0001 (
#31
